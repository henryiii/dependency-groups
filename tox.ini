[tox]
env_list =
    lint
    mypy
    covclean
    py{39,310,311,312}
    covcombine
    covreport
labels =
    ci = py, covcombine, covreport

[testenv]
package = wheel
wheel_build_env = build_wheel
deps = -r requirements/test.txt
commands = coverage run -m pytest -v {posargs}

depends =
    py{39,310,311,312},py: clean
    covcombine: py,py{39,310,311,312}
    covreport: covcombine

[testenv:covclean]
deps = -r requirements/coverage.txt
skip_install = true
commands = coverage erase

[testenv:covcombine]
deps = -r requirements/coverage.txt
skip_install = true
commands = coverage combine

[testenv:covreport]
deps = -r requirements/coverage.txt
skip_install = true
commands_pre = coverage html --fail-under=0
commands = coverage report

[testenv:render-requirements]
deps =
commands =
    python -m dependency_groups 'test' -o requirements/test.txt
    python -m dependency_groups 'coverage' -o requirements/coverage.txt
    python -m dependency_groups 'lint' -o requirements/lint.txt
    python -m dependency_groups 'typing' -o requirements/typing.txt
    python -m dependency_groups 'build' -o requirements/build.txt


[testenv:lint]
deps = -r requirements/lint.txt
skip_install = true
commands = pre-commit run -a


[testenv:twine-check]
description = "check the metadata on a package build"
skip_install = true
deps = -r requirements/build.txt
allowlist_externals = rm
commands_pre = rm -rf dist/
# check that twine validating package data works
commands = python -m build
           twine check dist/*


[testenv:mypy]
deps = -r requirements/typing.txt
skip_install = true
commands = mypy src/
